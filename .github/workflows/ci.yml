name: CI

# Run on all PR's and on pushes/merges to deploy and master
on:
  pull_request:
    branches: ['deploy', 'master', '!paper.md']
  push:
    branches: ['deploy', 'master', '!paper.md']

env:
  GITHUB_ACTION_IS_RUNNING: 1

jobs:
  tests:
    env:
        PMG_API_KEY: ${{ secrets.PMG_API_KEY }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install testing dependencies
      run: |
        bash build.sh _CI-test-requirements
    - name: Run tests
      run: |
        pytest -v --cov --cov-report xml lightshow/_tests

    # Code coverage when the repo is public
    # - name: Upload code coverage
    #   uses: codecov/codecov-action@v2
    #   timeout-minutes: 10
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #     fail_ci_if_error: false

  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: rickstaa/action-black@v1
        with:
          black_args: "lightshow/ --check"
          fail_on_error: "true"

  flake8_py3:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        uses: suo/flake8-github-action@releases/v1
        with:
          checkName: 'flake8_py3'   # NOTE: this needs to be the same as the job name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check_semantic_version_placeholder:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Check lines exist
      run: |
        grep -x "__version__ = ...  # semantic-version-placeholder" lightshow/__init__.py

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        bash build.sh _CI-docs-requirements
    - name: Build
      run: |
        bash build.sh docs

  publish:
    name: Publish to PyPi
    needs:
      - tests
      - black
      - flake8_py3
      - check_semantic_version_placeholder
      - docs
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/deploy'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build and publish
      run: | # CHANGE THIS TO USE `bash build.sh publish` LATER!
        echo "Just testing!"
      # env:
      #   FLIT_USERNAME: __token__
      #   FLIT_PASSWORD: ${{ secrets.PYPI_KEY }}
