name: CI

# Run on all PR's and on pushes/merges to deploy and master
on:
  pull_request:
    branches: ['master', 'dev/*', '!paper.md']
  push:
    branches: ['master', 'dev/*', '!paper.md']
    tags: ["v*"]

env:
    GITHUB_ACTION_IS_RUNNING: 1

jobs:

  tests:
    name: Tests

    env:
        MP_API_KEY: ${{ secrets.MP_API_KEY }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:

    - uses: actions/checkout@v4

    - uses: astral-sh/setup-uv@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Test with python ${{ matrix.python-version }}
      run: uv run --frozen --extra test pytest -v --cov --cov-report xml lightshow/_tests

    - uses: codecov/codecov-action@v5
      timeout-minutes: 10
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/ruff-action@v1
        with:
          src: "./lightshow"

  docs:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v4      

    - uses: astral-sh/setup-uv@v4

    - name: build
      run: uv run --frozen --extra doc make -C docs/ html

  # NOTE: Commented this out for now
  #
  # build_and_publish:
  #   # This workflow follows the best practices outlined here:
  #   # https://github.com/marketplace/actions/pypi-publish
  #   # for deploying a project to PyPI via a GH action. It only runs on tags
  #
  #   name: Upload release to PyPI
  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: pypi
  #     url: https://pypi.org/project/lightshow/
  #   permissions:
  #     id-token: write
  #
  #   needs:
  #     - tests
  #     - ruff
  #     - flake8_py3
  #     - docs
  #
  #   steps:
  #
  #   - name: Checkout
  #     uses: actions/checkout@v4
  #
  #   - name: Set up Python 3.9
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.9
  #
  #   - name: Build and apply version
  #     run: bash scripts/build_project.sh
  #
  #   - name: Publish package distributions to PyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1
  #     with:
  #       repository-url: https://upload.pypi.org/legacy/
  #
  # build_and_publish_docs:
  #   name: Build and publish documentation via GitHub Pages
  #
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #
  #   # Only allow tagged commits
  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
  #
  #   needs:
  #     - tests
  #     - ruff
  #     - flake8_py3
  #     - docs
  #     - build_and_publish
  #
  #   # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
  #   permissions:
  #     contents: read
  #     pages: write
  #     id-token: write
  #
  #   # Allow one concurrent deployment
  #   concurrency:
  #     group: "pages"
  #     cancel-in-progress: true
  #
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #
  #   - name: Checkout
  #     uses: actions/checkout@v4
  #
  #   - name: Set up Python 3.9
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.9
  #
  #   - name: Build and apply version
  #     run: |
  #       bash scripts/build_docs.sh
  #
  #   - name: Setup Pages
  #     uses: actions/configure-pages@v2
  #
  #   - name: Upload artifact
  #     uses: actions/upload-pages-artifact@v1
  #     with:
  #       path: 'docs/build/html/'
  #
  #   - name: Deploy to GitHub Pages
  #     id: deployment
  #     uses: actions/deploy-pages@v1
